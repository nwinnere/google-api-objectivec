// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AdSense Host API (adsensehost/v4.1)
// Description:
//   Generates performance reports, generates ad codes, and provides publisher
//   management capabilities for AdSense Hosts.
// Documentation:
//   https://developers.google.com/adsense/host/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAdSenseHost_Account;
@class GTLRAdSenseHost_AdClient;
@class GTLRAdSenseHost_AdStyle;
@class GTLRAdSenseHost_AdStyleColors;
@class GTLRAdSenseHost_AdStyleFont;
@class GTLRAdSenseHost_AdUnit;
@class GTLRAdSenseHost_AdUnitContentAdsSettings;
@class GTLRAdSenseHost_AdUnitContentAdsSettingsBackupOption;
@class GTLRAdSenseHost_AdUnitMobileContentAdsSettings;
@class GTLRAdSenseHost_CustomChannel;
@class GTLRAdSenseHost_ReportHeadersItem;
@class GTLRAdSenseHost_UrlChannel;

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRAdSenseHost_Account
 */
@interface GTLRAdSenseHost_Account : GTLRObject

/**
 *  Unique identifier of this account.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#account. */
@property(copy, nullable) NSString *kind;

/** Name of this account. */
@property(copy, nullable) NSString *name;

/** Approval status of this account. One of: PENDING, APPROVED, DISABLED. */
@property(copy, nullable) NSString *status;

@end


/**
 *  GTLRAdSenseHost_Accounts
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRAdSenseHost_Accounts : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(copy, nullable) NSString *ETag;

/**
 *  The accounts returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_Account *> *items;

/** Kind of list this is, in this case adsensehost#accounts. */
@property(copy, nullable) NSString *kind;

@end


/**
 *  GTLRAdSenseHost_AdClient
 */
@interface GTLRAdSenseHost_AdClient : GTLRObject

/**
 *  Whether this ad client is opted in to ARC.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *arcOptIn;

/**
 *  Unique identifier of this ad client.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#adClient. */
@property(copy, nullable) NSString *kind;

/**
 *  This ad client's product code, which corresponds to the PRODUCT_CODE report
 *  dimension.
 */
@property(copy, nullable) NSString *productCode;

/**
 *  Whether this ad client supports being reported on.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *supportsReporting;

@end


/**
 *  GTLRAdSenseHost_AdClients
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSenseHost_AdClients : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(copy, nullable) NSString *ETag;

/**
 *  The ad clients returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_AdClient *> *items;

/** Kind of list this is, in this case adsensehost#adClients. */
@property(copy, nullable) NSString *kind;

/**
 *  Continuation token used to page through ad clients. To retrieve the next
 *  page of results, set the next request's "pageToken" value to this.
 */
@property(copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdSenseHost_AdCode
 */
@interface GTLRAdSenseHost_AdCode : GTLRObject

/** The ad code snippet. */
@property(copy, nullable) NSString *adCode;

/** Kind this is, in this case adsensehost#adCode. */
@property(copy, nullable) NSString *kind;

@end


/**
 *  GTLRAdSenseHost_AdStyle
 */
@interface GTLRAdSenseHost_AdStyle : GTLRObject

/**
 *  The colors included in the style. These are represented as six hexadecimal
 *  characters, similar to HTML color codes, but without the leading hash.
 */
@property(strong, nullable) GTLRAdSenseHost_AdStyleColors *colors;

/**
 *  The style of the corners in the ad. Possible values are SQUARE,
 *  SLIGHTLY_ROUNDED and VERY_ROUNDED.
 */
@property(copy, nullable) NSString *corners;

/** The font which is included in the style. */
@property(strong, nullable) GTLRAdSenseHost_AdStyleFont *font;

/** Kind this is, in this case adsensehost#adStyle. */
@property(copy, nullable) NSString *kind;

@end


/**
 *  The colors included in the style. These are represented as six hexadecimal
 *  characters, similar to HTML color codes, but without the leading hash.
 */
@interface GTLRAdSenseHost_AdStyleColors : GTLRObject

/** The color of the ad background. */
@property(copy, nullable) NSString *background;

/** The color of the ad border. */
@property(copy, nullable) NSString *border;

/** The color of the ad text. */
@property(copy, nullable) NSString *text;

/** The color of the ad title. */
@property(copy, nullable) NSString *title;

/** The color of the ad url. */
@property(copy, nullable) NSString *url;

@end


/**
 *  The font which is included in the style.
 */
@interface GTLRAdSenseHost_AdStyleFont : GTLRObject

/**
 *  The family of the font. Possible values are: ACCOUNT_DEFAULT_FAMILY,
 *  ADSENSE_DEFAULT_FAMILY, ARIAL, TIMES and VERDANA.
 */
@property(copy, nullable) NSString *family;

/**
 *  The size of the font. Possible values are: ACCOUNT_DEFAULT_SIZE,
 *  ADSENSE_DEFAULT_SIZE, SMALL, MEDIUM and LARGE.
 */
@property(copy, nullable) NSString *size;

@end


/**
 *  GTLRAdSenseHost_AdUnit
 */
@interface GTLRAdSenseHost_AdUnit : GTLRObject

/**
 *  Identity code of this ad unit, not necessarily unique across ad clients.
 */
@property(copy, nullable) NSString *code;

/**
 *  Settings specific to content ads (AFC) and highend mobile content ads (AFMC
 *  - deprecated).
 */
@property(strong, nullable) GTLRAdSenseHost_AdUnitContentAdsSettings *contentAdsSettings;

/** Custom style information specific to this ad unit. */
@property(strong, nullable) GTLRAdSenseHost_AdStyle *customStyle;

/**
 *  Unique identifier of this ad unit. This should be considered an opaque
 *  identifier; it is not safe to rely on it being in any particular format.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#adUnit. */
@property(copy, nullable) NSString *kind;

/** Settings specific to WAP mobile content ads (AFMC - deprecated). */
@property(strong, nullable) GTLRAdSenseHost_AdUnitMobileContentAdsSettings *mobileContentAdsSettings;

/** Name of this ad unit. */
@property(copy, nullable) NSString *name;

/**
 *  Status of this ad unit. Possible values are:
 *  NEW: Indicates that the ad unit was created within the last seven days and
 *  does not yet have any activity associated with it.
 *  ACTIVE: Indicates that there has been activity on this ad unit in the last
 *  seven days.
 *  INACTIVE: Indicates that there has been no activity on this ad unit in the
 *  last seven days.
 */
@property(copy, nullable) NSString *status;

@end


/**
 *  Settings specific to content ads (AFC) and highend mobile content ads (AFMC
 *  - deprecated).
 */
@interface GTLRAdSenseHost_AdUnitContentAdsSettings : GTLRObject

/** The backup option to be used in instances where no ad is available. */
@property(strong, nullable) GTLRAdSenseHost_AdUnitContentAdsSettingsBackupOption *backupOption;

/**
 *  Size of this ad unit. Size values are in the form SIZE_{width}_{height}.
 */
@property(copy, nullable) NSString *size;

/**
 *  Type of this ad unit. Possible values are TEXT, TEXT_IMAGE, IMAGE and LINK.
 */
@property(copy, nullable) NSString *type;

@end


/**
 *  Settings specific to WAP mobile content ads (AFMC - deprecated).
 */
@interface GTLRAdSenseHost_AdUnitMobileContentAdsSettings : GTLRObject

/** The markup language to use for this ad unit. */
@property(copy, nullable) NSString *markupLanguage;

/** The scripting language to use for this ad unit. */
@property(copy, nullable) NSString *scriptingLanguage;

/** Size of this ad unit. */
@property(copy, nullable) NSString *size;

/** Type of this ad unit. */
@property(copy, nullable) NSString *type;

@end


/**
 *  The backup option to be used in instances where no ad is available.
 */
@interface GTLRAdSenseHost_AdUnitContentAdsSettingsBackupOption : GTLRObject

/**
 *  Color to use when type is set to COLOR. These are represented as six
 *  hexadecimal characters, similar to HTML color codes, but without the leading
 *  hash.
 */
@property(copy, nullable) NSString *color;

/** Type of the backup option. Possible values are BLANK, COLOR and URL. */
@property(copy, nullable) NSString *type;

/** URL to use when type is set to URL. */
@property(copy, nullable) NSString *url;

@end


/**
 *  GTLRAdSenseHost_AdUnits
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSenseHost_AdUnits : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(copy, nullable) NSString *ETag;

/**
 *  The ad units returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_AdUnit *> *items;

/** Kind of list this is, in this case adsensehost#adUnits. */
@property(copy, nullable) NSString *kind;

/**
 *  Continuation token used to page through ad units. To retrieve the next page
 *  of results, set the next request's "pageToken" value to this.
 */
@property(copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdSenseHost_AssociationSession
 */
@interface GTLRAdSenseHost_AssociationSession : GTLRObject

/**
 *  Hosted account id of the associated publisher after association. Present if
 *  status is ACCEPTED.
 */
@property(copy, nullable) NSString *accountId;

/**
 *  Unique identifier of this association session.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#associationSession. */
@property(copy, nullable) NSString *kind;

/**
 *  The products to associate with the user. Options: AFC, AFG, AFV, AFS
 *  (deprecated), AFMC (deprecated)
 */
@property(strong, nullable) NSArray<NSString *> *productCodes;

/**
 *  Redirect URL of this association session. Used to redirect users into the
 *  AdSense association flow.
 */
@property(copy, nullable) NSString *redirectUrl;

/**
 *  Status of the completed association, available once the association callback
 *  token has been verified. One of ACCEPTED, REJECTED, or ERROR.
 */
@property(copy, nullable) NSString *status;

/**
 *  The preferred locale of the user themselves when going through the AdSense
 *  association flow.
 */
@property(copy, nullable) NSString *userLocale;

/** The locale of the user's hosted website. */
@property(copy, nullable) NSString *websiteLocale;

/** The URL of the user's hosted website. */
@property(copy, nullable) NSString *websiteUrl;

@end


/**
 *  GTLRAdSenseHost_CustomChannel
 */
@interface GTLRAdSenseHost_CustomChannel : GTLRObject

/** Code of this custom channel, not necessarily unique across ad clients. */
@property(copy, nullable) NSString *code;

/**
 *  Unique identifier of this custom channel. This should be considered an
 *  opaque identifier; it is not safe to rely on it being in any particular
 *  format.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#customChannel. */
@property(copy, nullable) NSString *kind;

/** Name of this custom channel. */
@property(copy, nullable) NSString *name;

@end


/**
 *  GTLRAdSenseHost_CustomChannels
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSenseHost_CustomChannels : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(copy, nullable) NSString *ETag;

/**
 *  The custom channels returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_CustomChannel *> *items;

/** Kind of list this is, in this case adsensehost#customChannels. */
@property(copy, nullable) NSString *kind;

/**
 *  Continuation token used to page through custom channels. To retrieve the
 *  next page of results, set the next request's "pageToken" value to this.
 */
@property(copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdSenseHost_Report
 */
@interface GTLRAdSenseHost_Report : GTLRObject

/**
 *  The averages of the report. This is the same length as any other row in the
 *  report; cells corresponding to dimension columns are empty.
 */
@property(strong, nullable) NSArray<NSString *> *averages;

/**
 *  The header information of the columns requested in the report. This is a
 *  list of headers; one for each dimension in the request, followed by one for
 *  each metric in the request.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_ReportHeadersItem *> *headers;

/** Kind this is, in this case adsensehost#report. */
@property(copy, nullable) NSString *kind;

/**
 *  The output rows of the report. Each row is a list of cells; one for each
 *  dimension in the request, followed by one for each metric in the request.
 *  The dimension cells contain strings, and the metric cells contain numbers.
 */
@property(strong, nullable) NSArray<NSArray<NSString *> *> *rows;

/**
 *  The total number of rows matched by the report request. Fewer rows may be
 *  returned in the response due to being limited by the row count requested or
 *  the report row limit.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(strong, nullable) NSNumber *totalMatchedRows;

/**
 *  The totals of the report. This is the same length as any other row in the
 *  report; cells corresponding to dimension columns are empty.
 */
@property(strong, nullable) NSArray<NSString *> *totals;

/** Any warnings associated with generation of the report. */
@property(strong, nullable) NSArray<NSString *> *warnings;

@end


/**
 *  GTLRAdSenseHost_ReportHeadersItem
 */
@interface GTLRAdSenseHost_ReportHeadersItem : GTLRObject

/**
 *  The currency of this column. Only present if the header type is
 *  METRIC_CURRENCY.
 */
@property(copy, nullable) NSString *currency;

/** The name of the header. */
@property(copy, nullable) NSString *name;

/**
 *  The type of the header; one of DIMENSION, METRIC_TALLY, METRIC_RATIO, or
 *  METRIC_CURRENCY.
 */
@property(copy, nullable) NSString *type;

@end


/**
 *  GTLRAdSenseHost_UrlChannel
 */
@interface GTLRAdSenseHost_UrlChannel : GTLRObject

/**
 *  Unique identifier of this URL channel. This should be considered an opaque
 *  identifier; it is not safe to rely on it being in any particular format.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/** Kind of resource this is, in this case adsensehost#urlChannel. */
@property(copy, nullable) NSString *kind;

/**
 *  URL Pattern of this URL channel. Does not include "http://" or "https://".
 *  Example: www.example.com/home
 */
@property(copy, nullable) NSString *urlPattern;

@end


/**
 *  GTLRAdSenseHost_UrlChannels
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdSenseHost_UrlChannels : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(copy, nullable) NSString *ETag;

/**
 *  The URL channels returned in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAdSenseHost_UrlChannel *> *items;

/** Kind of list this is, in this case adsensehost#urlChannels. */
@property(copy, nullable) NSString *kind;

/**
 *  Continuation token used to page through URL channels. To retrieve the next
 *  page of results, set the next request's "pageToken" value to this.
 */
@property(copy, nullable) NSString *nextPageToken;

@end

NS_ASSUME_NONNULL_END
