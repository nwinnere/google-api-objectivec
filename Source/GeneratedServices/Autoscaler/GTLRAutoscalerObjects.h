// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Compute Engine Autoscaler API (autoscaler/v1beta2)
// Description:
//   The Google Compute Engine Autoscaler API provides autoscaling for groups of
//   Cloud VMs.
// Documentation:
//   http://developers.google.com/compute/docs/autoscaler

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAutoscaler_Autoscaler;
@class GTLRAutoscaler_AutoscalingPolicy;
@class GTLRAutoscaler_AutoscalingPolicyCpuUtilization;
@class GTLRAutoscaler_AutoscalingPolicyCustomMetricUtilization;
@class GTLRAutoscaler_AutoscalingPolicyLoadBalancingUtilization;
@class GTLRAutoscaler_DeprecationStatus;
@class GTLRAutoscaler_Operation;
@class GTLRAutoscaler_OperationError;
@class GTLRAutoscaler_OperationErrorErrorsItem;
@class GTLRAutoscaler_OperationWarningsItem;
@class GTLRAutoscaler_OperationWarningsItemDataItem;
@class GTLRAutoscaler_Zone;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Cloud Autoscaler resource.
 */
@interface GTLRAutoscaler_Autoscaler : GTLRObject

/** Configuration parameters for autoscaling algorithm. */
@property(strong, nullable) GTLRAutoscaler_AutoscalingPolicy *autoscalingPolicy;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(copy, nullable) NSString *creationTimestamp;

/**
 *  An optional textual description of the resource provided by the client.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(strong, nullable) NSNumber *identifier;

/** Type of resource. */
@property(copy, nullable) NSString *kind;

/** Name of the Autoscaler resource. Must be unique per project and zone. */
@property(copy, nullable) NSString *name;

/** [Output Only] A self-link to the Autoscaler configuration resource. */
@property(copy, nullable) NSString *selfLink;

/**
 *  URL to the entity which will be autoscaled. Currently the only supported
 *  value is ReplicaPool?s URL. Note: it is illegal to specify multiple
 *  Autoscalers for the same target.
 */
@property(copy, nullable) NSString *target;

@end


/**
 *  GTLRAutoscaler_AutoscalerListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAutoscaler_AutoscalerListResponse : GTLRCollectionObject

/**
 *  Autoscaler resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAutoscaler_Autoscaler *> *items;

/** Type of resource. */
@property(copy, nullable) NSString *kind;

/** [Output only] A token used to continue a truncated list request. */
@property(copy, nullable) NSString *nextPageToken;

@end


/**
 *  Cloud Autoscaler policy.
 */
@interface GTLRAutoscaler_AutoscalingPolicy : GTLRObject

/**
 *  The number of seconds that the Autoscaler should wait between two succeeding
 *  changes to the number of virtual machines. You should define an interval
 *  that is at least as long as the initialization time of a virtual machine and
 *  the time it may take for replica pool to create the virtual machine. The
 *  default is 60 seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *coolDownPeriodSec;

/** Configuration parameters of CPU based autoscaling policy. */
@property(strong, nullable) GTLRAutoscaler_AutoscalingPolicyCpuUtilization *cpuUtilization;

/** Configuration parameters of autoscaling based on custom metric. */
@property(strong, nullable) NSArray<GTLRAutoscaler_AutoscalingPolicyCustomMetricUtilization *> *customMetricUtilizations;

/** Configuration parameters of autoscaling based on load balancer. */
@property(strong, nullable) GTLRAutoscaler_AutoscalingPolicyLoadBalancingUtilization *loadBalancingUtilization;

/**
 *  The maximum number of replicas that the Autoscaler can scale up to.
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *maxNumReplicas;

/**
 *  The minimum number of replicas that the Autoscaler can scale down to.
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *minNumReplicas;

@end


/**
 *  CPU utilization policy.
 */
@interface GTLRAutoscaler_AutoscalingPolicyCpuUtilization : GTLRObject

/**
 *  The target utilization that the Autoscaler should maintain. It is
 *  represented as a fraction of used cores. For example: 6 cores used in 8-core
 *  VM are represented here as 0.75. Must be a float value between (0, 1]. If
 *  not defined, the default is 0.8.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(strong, nullable) NSNumber *utilizationTarget;

@end


/**
 *  Custom utilization metric policy.
 */
@interface GTLRAutoscaler_AutoscalingPolicyCustomMetricUtilization : GTLRObject

/**
 *  Identifier of the metric. It should be a Cloud Monitoring metric. The metric
 *  can not have negative values. The metric should be an utilization metric
 *  (increasing number of VMs handling requests x times should reduce average
 *  value of the metric roughly x times). For example you could use:
 *  compute.googleapis.com/instance/network/received_bytes_count.
 */
@property(copy, nullable) NSString *metric;

/**
 *  Target value of the metric which Autoscaler should maintain. Must be a
 *  positive value.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(strong, nullable) NSNumber *utilizationTarget;

/** Defines type in which utilization_target is expressed. */
@property(copy, nullable) NSString *utilizationTargetType;

@end


/**
 *  Load balancing utilization policy.
 */
@interface GTLRAutoscaler_AutoscalingPolicyLoadBalancingUtilization : GTLRObject

/**
 *  Fraction of backend capacity utilization (set in HTTP load balancing
 *  configuration) that Autoscaler should maintain. Must be a positive float
 *  value. If not defined, the default is 0.8. For example if your
 *  maxRatePerInstance capacity (in HTTP Load Balancing configuration) is set at
 *  10 and you would like to keep number of instances such that each instance
 *  receives 7 QPS on average, set this to 0.7.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(strong, nullable) NSNumber *utilizationTarget;

@end


/**
 *  GTLRAutoscaler_DeprecationStatus
 */
@interface GTLRAutoscaler_DeprecationStatus : GTLRObject

@property(copy, nullable) NSString *deleted;
@property(copy, nullable) NSString *deprecated;
@property(copy, nullable) NSString *obsolete;
@property(copy, nullable) NSString *replacement;
@property(copy, nullable) NSString *state;

@end


/**
 *  GTLRAutoscaler_Operation
 */
@interface GTLRAutoscaler_Operation : GTLRObject

@property(copy, nullable) NSString *clientOperationId;
@property(copy, nullable) NSString *creationTimestamp;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

@property(copy, nullable) NSString *endTime;
@property(strong, nullable) GTLRAutoscaler_OperationError *error;
@property(copy, nullable) NSString *httpErrorMessage;

/**
 *  httpErrorStatusCode
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *httpErrorStatusCode;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(strong, nullable) NSNumber *identifier;

@property(copy, nullable) NSString *insertTime;

/**
 *  [Output Only] Type of the resource. Always compute#operation for Operation
 *  resources.
 */
@property(copy, nullable) NSString *kind;

@property(copy, nullable) NSString *name;
@property(copy, nullable) NSString *operationType;

/**
 *  progress
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *progress;

@property(copy, nullable) NSString *region;
@property(copy, nullable) NSString *selfLink;
@property(copy, nullable) NSString *startTime;
@property(copy, nullable) NSString *status;
@property(copy, nullable) NSString *statusMessage;

/**
 *  targetId
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(strong, nullable) NSNumber *targetId;

@property(copy, nullable) NSString *targetLink;
@property(copy, nullable) NSString *user;
@property(strong, nullable) NSArray<GTLRAutoscaler_OperationWarningsItem *> *warnings;

/**
 *  zoneProperty
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRAutoscaler_OperationError
 */
@interface GTLRAutoscaler_OperationError : GTLRObject

@property(strong, nullable) NSArray<GTLRAutoscaler_OperationErrorErrorsItem *> *errors;

@end


/**
 *  GTLRAutoscaler_OperationWarningsItem
 */
@interface GTLRAutoscaler_OperationWarningsItem : GTLRObject

@property(copy, nullable) NSString *code;
@property(strong, nullable) NSArray<GTLRAutoscaler_OperationWarningsItemDataItem *> *data;
@property(copy, nullable) NSString *message;

@end


/**
 *  GTLRAutoscaler_OperationErrorErrorsItem
 */
@interface GTLRAutoscaler_OperationErrorErrorsItem : GTLRObject

@property(copy, nullable) NSString *code;
@property(copy, nullable) NSString *location;
@property(copy, nullable) NSString *message;

@end


/**
 *  GTLRAutoscaler_OperationWarningsItemDataItem
 */
@interface GTLRAutoscaler_OperationWarningsItemDataItem : GTLRObject

@property(copy, nullable) NSString *key;
@property(copy, nullable) NSString *value;

@end


/**
 *  GTLRAutoscaler_OperationList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAutoscaler_OperationList : GTLRCollectionObject

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/**
 *  items
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAutoscaler_Operation *> *items;

/**
 *  [Output Only] Type of resource. Always compute#operations for Operations
 *  resource.
 */
@property(copy, nullable) NSString *kind;

@property(copy, nullable) NSString *nextPageToken;
@property(copy, nullable) NSString *selfLink;

@end


/**
 *  GTLRAutoscaler_Zone
 */
@interface GTLRAutoscaler_Zone : GTLRObject

@property(copy, nullable) NSString *creationTimestamp;
@property(strong, nullable) GTLRAutoscaler_DeprecationStatus *deprecated;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(strong, nullable) NSNumber *identifier;

/** [Output Only] Type of the resource. Always compute#zone for zones. */
@property(copy, nullable) NSString *kind;

@property(copy, nullable) NSString *name;
@property(copy, nullable) NSString *region;
@property(copy, nullable) NSString *selfLink;
@property(copy, nullable) NSString *status;

@end


/**
 *  GTLRAutoscaler_ZoneList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAutoscaler_ZoneList : GTLRCollectionObject

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(copy, nullable) NSString *identifier;

/**
 *  items
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRAutoscaler_Zone *> *items;

/** Type of resource. */
@property(copy, nullable) NSString *kind;

@property(copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(copy, nullable) NSString *selfLink;

@end

NS_ASSUME_NONNULL_END
