// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Compute Engine Autoscaler API (autoscaler/v1beta2)
// Description:
//   The Google Compute Engine Autoscaler API provides autoscaling for groups of
//   Cloud VMs.
// Documentation:
//   http://developers.google.com/compute/docs/autoscaler

#import "GTLRAutoscalerQuery.h"

#import "GTLRAutoscalerObjects.h"

@implementation GTLRAutoscalerQuery

@dynamic fields;

@end

@implementation GTLRAutoscalerQuery_AutoscalersDelete

@dynamic autoscaler, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                      autoscaler:(NSString *)autoscaler {
  NSArray *pathParams = @[
    @"autoscaler", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers/{autoscaler}";
  GTLRAutoscalerQuery_AutoscalersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.autoscaler = autoscaler;
  query.expectedObjectClass = [GTLRAutoscaler_Operation class];
  query.loggingName = @"autoscaler.autoscalers.delete";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_AutoscalersGet

@dynamic autoscaler, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                      autoscaler:(NSString *)autoscaler {
  NSArray *pathParams = @[
    @"autoscaler", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers/{autoscaler}";
  GTLRAutoscalerQuery_AutoscalersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.autoscaler = autoscaler;
  query.expectedObjectClass = [GTLRAutoscaler_Autoscaler class];
  query.loggingName = @"autoscaler.autoscalers.get";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_AutoscalersInsert

@dynamic project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRAutoscaler_Autoscaler *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers";
  GTLRAutoscalerQuery_AutoscalersInsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRAutoscaler_Operation class];
  query.loggingName = @"autoscaler.autoscalers.insert";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_AutoscalersList

@dynamic filter, maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers";
  GTLRAutoscalerQuery_AutoscalersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRAutoscaler_AutoscalerListResponse class];
  query.loggingName = @"autoscaler.autoscalers.list";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_AutoscalersPatch

@dynamic autoscaler, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRAutoscaler_Autoscaler *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty
                     autoscaler:(NSString *)autoscaler {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"autoscaler", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers/{autoscaler}";
  GTLRAutoscalerQuery_AutoscalersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.autoscaler = autoscaler;
  query.expectedObjectClass = [GTLRAutoscaler_Operation class];
  query.loggingName = @"autoscaler.autoscalers.patch";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_AutoscalersUpdate

@dynamic autoscaler, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithObject:(GTLRAutoscaler_Autoscaler *)object
                        project:(NSString *)project
                   zoneProperty:(NSString *)zoneProperty
                     autoscaler:(NSString *)autoscaler {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"autoscaler", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"projects/{project}/zones/{zone}/autoscalers/{autoscaler}";
  GTLRAutoscalerQuery_AutoscalersUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.autoscaler = autoscaler;
  query.expectedObjectClass = [GTLRAutoscaler_Operation class];
  query.loggingName = @"autoscaler.autoscalers.update";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_ZoneOperationsDelete

@dynamic operation, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                       operation:(NSString *)operation {
  NSArray *pathParams = @[
    @"operation", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations/{operation}";
  GTLRAutoscalerQuery_ZoneOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.operation = operation;
  query.loggingName = @"autoscaler.zoneOperations.delete";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_ZoneOperationsGet

@dynamic operation, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty
                       operation:(NSString *)operation {
  NSArray *pathParams = @[
    @"operation", @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations/{operation}";
  GTLRAutoscalerQuery_ZoneOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.operation = operation;
  query.expectedObjectClass = [GTLRAutoscaler_Operation class];
  query.loggingName = @"autoscaler.zoneOperations.get";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_ZoneOperationsList

@dynamic filter, maxResults, pageToken, project, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (instancetype)queryWithProject:(NSString *)project
                    zoneProperty:(NSString *)zoneProperty {
  NSArray *pathParams = @[
    @"project", @"zone"
  ];
  NSString *pathURITemplate = @"{project}/zones/{zone}/operations";
  GTLRAutoscalerQuery_ZoneOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.zoneProperty = zoneProperty;
  query.expectedObjectClass = [GTLRAutoscaler_OperationList class];
  query.loggingName = @"autoscaler.zoneOperations.list";
  return query;
}

@end

@implementation GTLRAutoscalerQuery_ZonesList

@dynamic filter, maxResults, pageToken, project;

+ (instancetype)queryWithProject:(NSString *)project {
  NSArray *pathParams = @[ @"project" ];
  NSString *pathURITemplate = @"{project}/zones";
  GTLRAutoscalerQuery_ZonesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.project = project;
  query.expectedObjectClass = [GTLRAutoscaler_ZoneList class];
  query.loggingName = @"autoscaler.zones.list";
  return query;
}

@end
