// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Container Builder API (cloudbuild/v1)
// Description:
//   Builds container images in the cloud.
// Documentation:
//   https://cloud.google.com/container-builder/docs/

#import "GTLRCloudBuildQuery.h"

#import "GTLRCloudBuildObjects.h"

@implementation GTLRCloudBuildQuery

@dynamic fields;

@end

@implementation GTLRCloudBuildQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudBuildQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudBuild_Operation class];
  query.loggingName = @"cloudbuild.operations.get";
  return query;
}

@end

@implementation GTLRCloudBuildQuery_OperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudBuildQuery_OperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudBuild_ListOperationsResponse class];
  query.loggingName = @"cloudbuild.operations.list";
  return query;
}

@end

@implementation GTLRCloudBuildQuery_ProjectsBuildsCancel

@dynamic identifier, projectId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithObject:(GTLRCloudBuild_CancelBuildRequest *)object
                      projectId:(NSString *)projectId
                     identifier:(NSString *)identifier {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"id", @"projectId"
  ];
  NSString *pathURITemplate = @"v1/projects/{projectId}/builds/{id}:cancel";
  GTLRCloudBuildQuery_ProjectsBuildsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.projectId = projectId;
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRCloudBuild_Build class];
  query.loggingName = @"cloudbuild.projects.builds.cancel";
  return query;
}

@end

@implementation GTLRCloudBuildQuery_ProjectsBuildsCreate

@dynamic projectId;

+ (instancetype)queryWithObject:(GTLRCloudBuild_Build *)object
                      projectId:(NSString *)projectId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"projectId" ];
  NSString *pathURITemplate = @"v1/projects/{projectId}/builds";
  GTLRCloudBuildQuery_ProjectsBuildsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.projectId = projectId;
  query.expectedObjectClass = [GTLRCloudBuild_Operation class];
  query.loggingName = @"cloudbuild.projects.builds.create";
  return query;
}

@end

@implementation GTLRCloudBuildQuery_ProjectsBuildsGet

@dynamic identifier, projectId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithProjectId:(NSString *)projectId
                        identifier:(NSString *)identifier {
  NSArray *pathParams = @[
    @"id", @"projectId"
  ];
  NSString *pathURITemplate = @"v1/projects/{projectId}/builds/{id}";
  GTLRCloudBuildQuery_ProjectsBuildsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.projectId = projectId;
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRCloudBuild_Build class];
  query.loggingName = @"cloudbuild.projects.builds.get";
  return query;
}

@end

@implementation GTLRCloudBuildQuery_ProjectsBuildsList

@dynamic pageSize, pageToken, projectId;

+ (instancetype)queryWithProjectId:(NSString *)projectId {
  NSArray *pathParams = @[ @"projectId" ];
  NSString *pathURITemplate = @"v1/projects/{projectId}/builds";
  GTLRCloudBuildQuery_ProjectsBuildsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.projectId = projectId;
  query.expectedObjectClass = [GTLRCloudBuild_ListBuildsResponse class];
  query.loggingName = @"cloudbuild.projects.builds.list";
  return query;
}

@end
