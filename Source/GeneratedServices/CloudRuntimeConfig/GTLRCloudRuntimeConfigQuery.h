// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud RuntimeConfig API (runtimeconfig/v1beta1)
// Description:
//   Provides capabilities for dynamic configuration and coordination for
//   applications running on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/deployment-manager/docs/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudRuntimeConfig_RuntimeConfig;
@class GTLRCloudRuntimeConfig_Variable;
@class GTLRCloudRuntimeConfig_Waiter;
@class GTLRCloudRuntimeConfig_WatchVariableRequest;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud RuntimeConfig query classes.
 */
@interface GTLRCloudRuntimeConfigQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(copy, nullable) NSString *fields;

@end

/**
 *  CreateConfig creates a new config resource object.
 *  The configuration name must be unique within project.
 *
 *  Method: runtimeconfig.projects.configs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsCreate : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsCreateWithObject:parent:]

/**
 *  The cloud project to which configuration belongs.
 *  Required. Must be a valid GCP project.
 */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_RuntimeConfig.
 *
 *  CreateConfig creates a new config resource object.
 *  The configuration name must be unique within project.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_RuntimeConfig to include in the
 *    query.
 *  @param parent The cloud project to which configuration belongs.
 *    Required. Must be a valid GCP project.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_RuntimeConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the config object.
 *
 *  Method: runtimeconfig.projects.configs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsDelete : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsDeleteWithname:]

/**
 *  The configuration resource object to delete.
 *  Required. Must be a valid GCP project.
 */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Empty.
 *
 *  Deletes the config object.
 *
 *  @param name The configuration resource object to delete.
 *    Required. Must be a valid GCP project.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the config resource object.
 *
 *  Method: runtimeconfig.projects.configs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsGet : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsGetWithname:]

/** The name of the RuntimeConfig resource object to retrieve. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_RuntimeConfig.
 *
 *  Gets the config resource object.
 *
 *  @param name The name of the RuntimeConfig resource object to retrieve.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the config objects within project.
 *
 *  Method: runtimeconfig.projects.configs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsList : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsListWithparent:]

/**
 *  List pagination support.
 *  The size of the page to return. We may return fewer elements.
 */
@property(assign) NSInteger pageSize;

/** The token for pagination. */
@property(copy, nullable) NSString *pageToken;

/**
 *  The cloud project, whose configuration resources we want to list.
 *  Required. Must be a valid GCP project.
 */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_ListConfigsResponse.
 *
 *  Lists all the config objects within project.
 *
 *  @param parent The cloud project, whose configuration resources we want to
 *    list.
 *    Required. Must be a valid GCP project.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: runtimeconfig.projects.configs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsOperationsGet : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsOperationsGetWithname:]

/** The name of the operation resource. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the config resource object.
 *  RuntimeConfig object must already exist.
 *
 *  Method: runtimeconfig.projects.configs.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsUpdate : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsUpdateWithObject:name:]

/**
 *  The name of the config resource to update.
 *  Required. Must be a valid config resource.
 */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_RuntimeConfig.
 *
 *  Updates the config resource object.
 *  RuntimeConfig object must already exist.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_RuntimeConfig to include in the
 *    query.
 *  @param name The name of the config resource to update.
 *    Required. Must be a valid config resource.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsUpdate
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_RuntimeConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a variable within the given configuration.
 *  Create variable will create all required intermediate path elements.
 *  It is a FAILED_PRECONDITION error to create a variable with a name that is
 *  a prefix of an existing variable name, or that has an existing variable
 *  name as a prefix.
 *
 *  Method: runtimeconfig.projects.configs.variables.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesCreate : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesCreateWithObject:parent:]

/**
 *  The configuration parent, that will own the variable.
 *  Required, must a valid configuration name within project_id.
 */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Variable.
 *
 *  Creates a variable within the given configuration.
 *  Create variable will create all required intermediate path elements.
 *  It is a FAILED_PRECONDITION error to create a variable with a name that is
 *  a prefix of an existing variable name, or that has an existing variable
 *  name as a prefix.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_Variable to include in the
 *    query.
 *  @param parent The configuration parent, that will own the variable.
 *    Required, must a valid configuration name within project_id.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_Variable *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes variable or variables.
 *  If name denotes a variable, that variable is deleted. If name is a prefix
 *  and recursive is true, then all variables with that prefix are deleted,
 *  it's a FAILED_PRECONDITION to delete a prefix without recursive being true.
 *
 *  Method: runtimeconfig.projects.configs.variables.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesDelete : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesDeleteWithname:]

/** The name of the variable to delete. */
@property(copy, nullable) NSString *name;

/**
 *  If recursive is false and name is a prefix of other variables, then
 *  the request will fail.
 */
@property(assign) BOOL recursive;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Empty.
 *
 *  Deletes variable or variables.
 *  If name denotes a variable, that variable is deleted. If name is a prefix
 *  and recursive is true, then all variables with that prefix are deleted,
 *  it's a FAILED_PRECONDITION to delete a prefix without recursive being true.
 *
 *  @param name The name of the variable to delete.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the variable resource object.
 *
 *  Method: runtimeconfig.projects.configs.variables.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesGet : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesGetWithname:]

/** What variable to return. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Variable.
 *
 *  Gets the variable resource object.
 *
 *  @param name What variable to return.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists variables within given RuntimeConfig object, matching optionally
 *  provided filter.
 *  List contains only variable metadata, but not values.
 *
 *  Method: runtimeconfig.projects.configs.variables.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesList : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesListWithparent:]

/**
 *  List only variables matching filter prefix exactly.
 *  e.g. `projects/{project_id}/config/{config_id}/variables/{variable/id}`.
 */
@property(copy, nullable) NSString *filter;

/**
 *  List pagination support.
 *  The size of the page to return. We may return fewer elements.
 */
@property(assign) NSInteger pageSize;

/** The token for pagination. */
@property(copy, nullable) NSString *pageToken;

/** Which RuntimeConfig object to list for variables. */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_ListVariablesResponse.
 *
 *  Lists variables within given RuntimeConfig object, matching optionally
 *  provided filter.
 *  List contains only variable metadata, but not values.
 *
 *  @param parent Which RuntimeConfig object to list for variables.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing variable with a new value.
 *
 *  Method: runtimeconfig.projects.configs.variables.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesUpdate : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesUpdateWithObject:name:]

/**
 *  The name of the variable to update.
 *  In the format of:
 *  "projects/{project_id}/configs/{config_id}/variables/{variable_id}"
 */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Variable.
 *
 *  Updates an existing variable with a new value.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_Variable to include in the
 *    query.
 *  @param name The name of the variable to update.
 *    In the format of:
 *    "projects/{project_id}/configs/{config_id}/variables/{variable_id}"
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesUpdate
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_Variable *)object
                           name:(NSString *)name;

@end

/**
 *  WatchVariable watches for a variable to change and then returns the new
 *  value or times out.
 *  If variable is deleted while being watched, VariableState will be DELETED
 *  and the Value will contain the last known value.
 *  If the operation deadline is set to a larger value than internal timeout
 *  existing, current variable value will be returned and Variable state will
 *  be VARIABLE_STATE_UNSPECIFIED.
 *
 *  Method: runtimeconfig.projects.configs.variables.watch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesWatch : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsVariablesWatchWithObject:name:]

/** The name of the variable to retrieve. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Variable.
 *
 *  WatchVariable watches for a variable to change and then returns the new
 *  value or times out.
 *  If variable is deleted while being watched, VariableState will be DELETED
 *  and the Value will contain the last known value.
 *  If the operation deadline is set to a larger value than internal timeout
 *  existing, current variable value will be returned and Variable state will
 *  be VARIABLE_STATE_UNSPECIFIED.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_WatchVariableRequest to include
 *    in the query.
 *  @param name The name of the variable to retrieve.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsVariablesWatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_WatchVariableRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a Waiter resource. This operation returns a long-running Operation
 *  resource which can be polled for completion. However, a Waiter with the
 *  given name will exist (and can be retrieved) prior to the resultant
 *  Operation completing. If the resultant Operation indicates a failure, the
 *  failed Waiter resource will still exist and must be deleted prior to
 *  subsequent creation attempts.
 *
 *  Method: runtimeconfig.projects.configs.waiters.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersCreate : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsWaitersCreateWithObject:parent:]

/**
 *  The fully-qualified name of the configuration that will own the waiter.
 *  Required. Must be a valid configuration name.
 */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Operation.
 *
 *  Creates a Waiter resource. This operation returns a long-running Operation
 *  resource which can be polled for completion. However, a Waiter with the
 *  given name will exist (and can be retrieved) prior to the resultant
 *  Operation completing. If the resultant Operation indicates a failure, the
 *  failed Waiter resource will still exist and must be deleted prior to
 *  subsequent creation attempts.
 *
 *  @param object The @c GTLRCloudRuntimeConfig_Waiter to include in the query.
 *  @param parent The fully-qualified name of the configuration that will own
 *    the waiter.
 *    Required. Must be a valid configuration name.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRuntimeConfig_Waiter *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the Waiter with the specified name.
 *
 *  Method: runtimeconfig.projects.configs.waiters.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersDelete : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsWaitersDeleteWithname:]

/** The Waiter resource to delete. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Empty.
 *
 *  Deletes the Waiter with the specified name.
 *
 *  @param name The Waiter resource to delete.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the Waiter resource with the specified name.
 *
 *  Method: runtimeconfig.projects.configs.waiters.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersGet : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsWaitersGetWithname:]

/** The fully-qualified name of the Waiter resource object to retrieve. */
@property(copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_Waiter.
 *
 *  Gets the Waiter resource with the specified name.
 *
 *  @param name The fully-qualified name of the Waiter resource object to
 *    retrieve.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List Waiters within the given RuntimeConfig resource.
 *
 *  Method: runtimeconfig.projects.configs.waiters.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudPlatform
 *    @c kGTLRAuthScopeCloudRuntimeConfigCloudruntimeconfig
 */
@interface GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersList : GTLRCloudRuntimeConfigQuery
// Previous library name was
//   +[GTLQueryCloudRuntimeConfig queryForProjectsConfigsWaitersListWithparent:]

/**
 *  List pagination support.
 *  The size of the page to return. We may return fewer elements.
 */
@property(assign) NSInteger pageSize;

/** The token for pagination. */
@property(copy, nullable) NSString *pageToken;

/**
 *  The fully-qualified name of the configuration to list.
 *  Required. Must be a valid configuration name.
 */
@property(copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRuntimeConfig_ListWaitersResponse.
 *
 *  List Waiters within the given RuntimeConfig resource.
 *
 *  @param parent The fully-qualified name of the configuration to list.
 *    Required. Must be a valid configuration name.
 *
 *  @returns GTLRCloudRuntimeConfigQuery_ProjectsConfigsWaitersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END
