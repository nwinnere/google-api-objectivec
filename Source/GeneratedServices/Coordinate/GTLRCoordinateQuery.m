// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Maps Coordinate API (coordinate/v1)
// Description:
//   Lets you view and manage jobs in a Coordinate team.
// Documentation:
//   https://developers.google.com/coordinate/

#import "GTLRCoordinateQuery.h"

#import "GTLRCoordinateObjects.h"

// ----------------------------------------------------------------------------
// Constants

// progress
NSString * const kGTLRCoordinateProgressCompleted   = @"COMPLETED";
NSString * const kGTLRCoordinateProgressInProgress  = @"IN_PROGRESS";
NSString * const kGTLRCoordinateProgressNotAccepted = @"NOT_ACCEPTED";
NSString * const kGTLRCoordinateProgressNotStarted  = @"NOT_STARTED";
NSString * const kGTLRCoordinateProgressObsolete    = @"OBSOLETE";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCoordinateQuery

@dynamic fields;

@end

@implementation GTLRCoordinateQuery_CustomFieldDefList

@dynamic teamId;

+ (instancetype)queryWithTeamId:(NSString *)teamId {
  NSArray *pathParams = @[ @"teamId" ];
  NSString *pathURITemplate = @"teams/{teamId}/custom_fields";
  GTLRCoordinateQuery_CustomFieldDefList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.expectedObjectClass = [GTLRCoordinate_CustomFieldDefListResponse class];
  query.loggingName = @"coordinate.customFieldDef.list";
  return query;
}

@end

@implementation GTLRCoordinateQuery_JobsGet

@dynamic jobId, teamId;

+ (instancetype)queryWithTeamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}";
  GTLRCoordinateQuery_JobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Job class];
  query.loggingName = @"coordinate.jobs.get";
  return query;
}

@end

@implementation GTLRCoordinateQuery_JobsInsert

@dynamic address, assignee, customerName, customerPhoneNumber, customField, lat,
         lng, note, teamId, title;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customField" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRCoordinate_Job *)object
                         teamId:(NSString *)teamId
                        address:(NSString *)address
                            lat:(double)lat
                            lng:(double)lng
                          title:(NSString *)title {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"teamId" ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs";
  GTLRCoordinateQuery_JobsInsert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.teamId = teamId;
  query.address = address;
  query.lat = lat;
  query.lng = lng;
  query.title = title;
  query.expectedObjectClass = [GTLRCoordinate_Job class];
  query.loggingName = @"coordinate.jobs.insert";
  return query;
}

@end

@implementation GTLRCoordinateQuery_JobsList

@dynamic maxResults, minModifiedTimestampMs, omitJobChanges, pageToken, teamId;

+ (instancetype)queryWithTeamId:(NSString *)teamId {
  NSArray *pathParams = @[ @"teamId" ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs";
  GTLRCoordinateQuery_JobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.expectedObjectClass = [GTLRCoordinate_JobListResponse class];
  query.loggingName = @"coordinate.jobs.list";
  return query;
}

@end

@implementation GTLRCoordinateQuery_JobsPatch

@dynamic address, assignee, customerName, customerPhoneNumber, customField,
         jobId, lat, lng, note, progress, teamId, title;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customField" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRCoordinate_Job *)object
                         teamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}";
  GTLRCoordinateQuery_JobsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Job class];
  query.loggingName = @"coordinate.jobs.patch";
  return query;
}

@end

@implementation GTLRCoordinateQuery_JobsUpdate

@dynamic address, assignee, customerName, customerPhoneNumber, customField,
         jobId, lat, lng, note, progress, teamId, title;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customField" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRCoordinate_Job *)object
                         teamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}";
  GTLRCoordinateQuery_JobsUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Job class];
  query.loggingName = @"coordinate.jobs.update";
  return query;
}

@end

@implementation GTLRCoordinateQuery_LocationList

@dynamic maxResults, pageToken, startTimestampMs, teamId, workerEmail;

+ (instancetype)queryWithTeamId:(NSString *)teamId
                    workerEmail:(NSString *)workerEmail
               startTimestampMs:(unsigned long long)startTimestampMs {
  NSArray *pathParams = @[
    @"teamId", @"workerEmail"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/workers/{workerEmail}/locations";
  GTLRCoordinateQuery_LocationList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.workerEmail = workerEmail;
  query.startTimestampMs = startTimestampMs;
  query.expectedObjectClass = [GTLRCoordinate_LocationListResponse class];
  query.loggingName = @"coordinate.location.list";
  return query;
}

@end

@implementation GTLRCoordinateQuery_ScheduleGet

@dynamic jobId, teamId;

+ (instancetype)queryWithTeamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}/schedule";
  GTLRCoordinateQuery_ScheduleGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Schedule class];
  query.loggingName = @"coordinate.schedule.get";
  return query;
}

@end

@implementation GTLRCoordinateQuery_SchedulePatch

@dynamic allDay, duration, endTime, jobId, startTime, teamId;

+ (instancetype)queryWithObject:(GTLRCoordinate_Schedule *)object
                         teamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}/schedule";
  GTLRCoordinateQuery_SchedulePatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Schedule class];
  query.loggingName = @"coordinate.schedule.patch";
  return query;
}

@end

@implementation GTLRCoordinateQuery_ScheduleUpdate

@dynamic allDay, duration, endTime, jobId, startTime, teamId;

+ (instancetype)queryWithObject:(GTLRCoordinate_Schedule *)object
                         teamId:(NSString *)teamId
                          jobId:(unsigned long long)jobId {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[
    @"jobId", @"teamId"
  ];
  NSString *pathURITemplate = @"teams/{teamId}/jobs/{jobId}/schedule";
  GTLRCoordinateQuery_ScheduleUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.teamId = teamId;
  query.jobId = jobId;
  query.expectedObjectClass = [GTLRCoordinate_Schedule class];
  query.loggingName = @"coordinate.schedule.update";
  return query;
}

@end

@implementation GTLRCoordinateQuery_TeamList

@dynamic admin, dispatcher, worker;

+ (instancetype)query {
  NSString *pathURITemplate = @"teams";
  GTLRCoordinateQuery_TeamList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCoordinate_TeamListResponse class];
  query.loggingName = @"coordinate.team.list";
  return query;
}

@end

@implementation GTLRCoordinateQuery_WorkerList

@dynamic teamId;

+ (instancetype)queryWithTeamId:(NSString *)teamId {
  NSArray *pathParams = @[ @"teamId" ];
  NSString *pathURITemplate = @"teams/{teamId}/workers";
  GTLRCoordinateQuery_WorkerList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.teamId = teamId;
  query.expectedObjectClass = [GTLRCoordinate_WorkerListResponse class];
  query.loggingName = @"coordinate.worker.list";
  return query;
}

@end
