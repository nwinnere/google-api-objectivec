// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Freebase Search (freebase/v1)
// Description:
//   Find Freebase entities using textual queries and other constraints.
// Documentation:
//   https://developers.google.com/freebase/

#import "GTLRFreebaseQuery.h"

#import "GTLRFreebaseObjects.h"

// ----------------------------------------------------------------------------
// Constants

// encode
NSString * const kGTLRFreebaseEncodeHtml = @"html";
NSString * const kGTLRFreebaseEncodeOff  = @"off";

// format
NSString * const kGTLRFreebaseFormatAc      = @"ac";
NSString * const kGTLRFreebaseFormatClassic = @"classic";
NSString * const kGTLRFreebaseFormatEntity  = @"entity";
NSString * const kGTLRFreebaseFormatGuids   = @"guids";
NSString * const kGTLRFreebaseFormatIds     = @"ids";
NSString * const kGTLRFreebaseFormatMids    = @"mids";

// help
NSString * const kGTLRFreebaseHelpLangs      = @"langs";
NSString * const kGTLRFreebaseHelpMappings   = @"mappings";
NSString * const kGTLRFreebaseHelpPredicates = @"predicates";

// scoring
NSString * const kGTLRFreebaseScoringEntity   = @"entity";
NSString * const kGTLRFreebaseScoringFreebase = @"freebase";
NSString * const kGTLRFreebaseScoringSchema   = @"schema";

// spell
NSString * const kGTLRFreebaseSpellAlways     = @"always";
NSString * const kGTLRFreebaseSpellNoResults  = @"no_results";
NSString * const kGTLRFreebaseSpellNoSpelling = @"no_spelling";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRFreebaseQuery

@dynamic fields;

@end

@implementation GTLRFreebaseQuery_Reconcile

@dynamic confidence, kind, lang, limit, name, prop;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"kind" : [NSString class],
    @"lang" : [NSString class],
    @"prop" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"reconcile";
  GTLRFreebaseQuery_Reconcile *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRFreebase_ReconcileGet class];
  query.loggingName = @"freebase.reconcile";
  return query;
}

@end

@implementation GTLRFreebaseQuery_Search

@dynamic asOfTime, callback, cursor, domain, encode, exact, filter, format,
         help, indent, lang, limit, mid, mqlOutput, output, prefixed, query,
         scoring, spell, stemmed, type, with, without;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"asOfTime" : @"as_of_time",
    @"mqlOutput" : @"mql_output"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"domain" : [NSString class],
    @"filter" : [NSString class],
    @"lang" : [NSString class],
    @"mid" : [NSString class],
    @"type" : [NSString class],
    @"with" : [NSString class],
    @"without" : [NSString class]
  };
  return map;
}

+ (instancetype)query {
  NSString *pathURITemplate = @"search";
  GTLRFreebaseQuery_Search *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.loggingName = @"freebase.search";
  return query;
}

+ (instancetype)queryForMedia {
  GTLRFreebaseQuery_Search *query =
    [self query];
  query.downloadAsDataObjectType = @"media";
  query.loggingName = @"Download freebase.search";
  return query;
}

@end
