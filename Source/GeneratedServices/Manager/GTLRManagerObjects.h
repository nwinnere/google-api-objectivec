// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Deployment Manager API (manager/v1beta2)
// Description:
//   The Deployment Manager API allows users to declaratively configure, deploy
//   and run complex solutions on the Google Cloud Platform.
// Documentation:
//   https://developers.google.com/deployment-manager/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRManager_AccessConfig;
@class GTLRManager_Action;
@class GTLRManager_AllowedRule;
@class GTLRManager_AutoscalingModule;
@class GTLRManager_AutoscalingModuleStatus;
@class GTLRManager_Deployment;
@class GTLRManager_DeploymentModules;
@class GTLRManager_DeployState;
@class GTLRManager_DiskAttachment;
@class GTLRManager_EnvVariable;
@class GTLRManager_ExistingDisk;
@class GTLRManager_FirewallModule;
@class GTLRManager_FirewallModuleStatus;
@class GTLRManager_HealthCheckModule;
@class GTLRManager_HealthCheckModuleStatus;
@class GTLRManager_LbModule;
@class GTLRManager_LbModuleStatus;
@class GTLRManager_Metadata;
@class GTLRManager_MetadataItem;
@class GTLRManager_Module;
@class GTLRManager_ModuleStatus;
@class GTLRManager_NetworkInterface;
@class GTLRManager_NetworkModule;
@class GTLRManager_NetworkModuleStatus;
@class GTLRManager_NewDisk;
@class GTLRManager_NewDiskInitializeParams;
@class GTLRManager_ParamOverride;
@class GTLRManager_ReplicaPoolModule;
@class GTLRManager_ReplicaPoolModuleEnvVariables;
@class GTLRManager_ReplicaPoolModuleStatus;
@class GTLRManager_ReplicaPoolParams;
@class GTLRManager_ReplicaPoolParamsV1Beta1;
@class GTLRManager_ServiceAccount;
@class GTLRManager_Tag;
@class GTLRManager_Template;
@class GTLRManager_TemplateActions;
@class GTLRManager_TemplateModules;

NS_ASSUME_NONNULL_BEGIN

/**
 *  A Compute Engine network accessConfig. Identical to the accessConfig on
 *  corresponding Compute Engine resource.
 */
@interface GTLRManager_AccessConfig : GTLRObject

/** Name of this access configuration. */
@property(copy, nullable) NSString *name;

/** An external IP address associated with this instance. */
@property(copy, nullable) NSString *natIp;

/**
 *  Type of this access configuration file. (Currently only ONE_TO_ONE_NAT is
 *  legal.)
 */
@property(copy, nullable) NSString *type;

@end


/**
 *  An Action encapsulates a set of commands as a single runnable module with
 *  additional information needed during run-time.
 */
@interface GTLRManager_Action : GTLRObject

/** A list of commands to run sequentially for this action. */
@property(strong, nullable) NSArray<NSString *> *commands;

/**
 *  The timeout in milliseconds for this action to run.
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *timeoutMs;

@end


/**
 *  An allowed port resource.
 */
@interface GTLRManager_AllowedRule : GTLRObject

/** ?tcp?, ?udp? or ?icmp? */
@property(copy, nullable) NSString *IPProtocol;

/**
 *  List of ports or port ranges (Example inputs include: ["22"], [?33?,
 *  "12345-12349"].
 */
@property(strong, nullable) NSArray<NSString *> *ports;

@end


/**
 *  GTLRManager_AutoscalingModule
 */
@interface GTLRManager_AutoscalingModule : GTLRObject

/**
 *  coolDownPeriodSec
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *coolDownPeriodSec;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  maxNumReplicas
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *maxNumReplicas;

/**
 *  minNumReplicas
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *minNumReplicas;

@property(copy, nullable) NSString *signalType;
@property(copy, nullable) NSString *targetModule;

/**
 *  target_utilization should be in range [0,1].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(strong, nullable) NSNumber *targetUtilization;

@end


/**
 *  GTLRManager_AutoscalingModuleStatus
 */
@interface GTLRManager_AutoscalingModuleStatus : GTLRObject

/** [Output Only] The URL of the corresponding Autoscaling configuration. */
@property(copy, nullable) NSString *autoscalingConfigUrl;

@end


/**
 *  A deployment represents a physical instantiation of a Template.
 */
@interface GTLRManager_Deployment : GTLRObject

/** [Output Only] The time when this deployment was created. */
@property(copy, nullable) NSString *creationDate;

/**
 *  A user-supplied description of this Deployment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/** [Output Only] List of status for the modules in this deployment. */
@property(strong, nullable) GTLRManager_DeploymentModules *modules;

/**
 *  Name of this deployment. The name must conform to the following regular
 *  expression: [a-zA-Z0-9-_]{1,64}
 */
@property(copy, nullable) NSString *name;

/**
 *  The set of parameter overrides to apply to the corresponding Template before
 *  deploying.
 */
@property(strong, nullable) NSArray<GTLRManager_ParamOverride *> *overrides;

/** [Output Only] Current status of this deployment. */
@property(strong, nullable) GTLRManager_DeployState *state;

/** The name of the Template on which this deployment is based. */
@property(copy, nullable) NSString *templateName;

@end


/**
 *  [Output Only] List of status for the modules in this deployment.
 *
 *  @note This class is documented as having more properties of
 *        GTLRManager_ModuleStatus. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRManager_DeploymentModules : GTLRObject
@end


/**
 *  GTLRManager_DeploymentsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRManager_DeploymentsListResponse : GTLRCollectionObject

@property(copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRManager_Deployment *> *resources;

@end


/**
 *  [Output Only] The current state of a replica or module.
 */
@interface GTLRManager_DeployState : GTLRObject

/** [Output Only] Human readable details about the current state. */
@property(copy, nullable) NSString *details;

/**
 *  [Output Only] The status of the deployment. Possible values include:
 *  - UNKNOWN
 *  - DEPLOYING
 *  - DEPLOYED
 *  - DEPLOYMENT_FAILED
 *  - DELETING
 *  - DELETED
 *  - DELETE_FAILED
 */
@property(copy, nullable) NSString *status;

@end


/**
 *  How to attach a disk to a Replica.
 */
@interface GTLRManager_DiskAttachment : GTLRObject

/** The device name of this disk. */
@property(copy, nullable) NSString *deviceName;

/**
 *  A zero-based index to assign to this disk, where 0 is reserved for the boot
 *  disk. If not specified, this is assigned by the server.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(strong, nullable) NSNumber *index;

@end


/**
 *  An environment variable.
 */
@interface GTLRManager_EnvVariable : GTLRObject

/**
 *  Whether this variable is hidden or visible.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *hidden;

/** Value of the environment variable. */
@property(copy, nullable) NSString *value;

@end


/**
 *  A pre-existing persistent disk that will be attached to every Replica in the
 *  Pool.
 */
@interface GTLRManager_ExistingDisk : GTLRObject

/** Optional. How the disk will be attached to the Replica. */
@property(strong, nullable) GTLRManager_DiskAttachment *attachment;

/**
 *  The fully-qualified URL of the Persistent Disk resource. It must be in the
 *  same zone as the Pool.
 */
@property(copy, nullable) NSString *source;

@end


/**
 *  A Firewall resource
 */
@interface GTLRManager_FirewallModule : GTLRObject

/** The allowed ports or port ranges. */
@property(strong, nullable) NSArray<GTLRManager_AllowedRule *> *allowed;

/**
 *  The description of the firewall (optional)
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  The NetworkModule to which this firewall should apply. If not specified, or
 *  if specified as 'default', this firewall will be applied to the 'default'
 *  network.
 */
@property(copy, nullable) NSString *network;

/**
 *  Source IP ranges to apply this firewall to, see the GCE Spec for details on
 *  syntax
 */
@property(strong, nullable) NSArray<NSString *> *sourceRanges;

/**
 *  Source Tags to apply this firewall to, see the GCE Spec for details on
 *  syntax
 */
@property(strong, nullable) NSArray<NSString *> *sourceTags;

/**
 *  Target Tags to apply this firewall to, see the GCE Spec for details on
 *  syntax
 */
@property(strong, nullable) NSArray<NSString *> *targetTags;

@end


/**
 *  GTLRManager_FirewallModuleStatus
 */
@interface GTLRManager_FirewallModuleStatus : GTLRObject

/** [Output Only] The URL of the corresponding Firewall resource. */
@property(copy, nullable) NSString *firewallUrl;

@end


/**
 *  GTLRManager_HealthCheckModule
 */
@interface GTLRManager_HealthCheckModule : GTLRObject

/**
 *  checkIntervalSec
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *checkIntervalSec;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  healthyThreshold
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *healthyThreshold;

@property(copy, nullable) NSString *host;
@property(copy, nullable) NSString *path;

/**
 *  port
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *port;

/**
 *  timeoutSec
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *timeoutSec;

/**
 *  unhealthyThreshold
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *unhealthyThreshold;

@end


/**
 *  GTLRManager_HealthCheckModuleStatus
 */
@interface GTLRManager_HealthCheckModuleStatus : GTLRObject

/** [Output Only] The HealthCheck URL. */
@property(copy, nullable) NSString *healthCheckUrl;

@end


/**
 *  GTLRManager_LbModule
 */
@interface GTLRManager_LbModule : GTLRObject

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

@property(strong, nullable) NSArray<NSString *> *healthChecks;
@property(copy, nullable) NSString *ipAddress;
@property(copy, nullable) NSString *ipProtocol;
@property(copy, nullable) NSString *portRange;
@property(copy, nullable) NSString *sessionAffinity;
@property(strong, nullable) NSArray<NSString *> *targetModules;

@end


/**
 *  GTLRManager_LbModuleStatus
 */
@interface GTLRManager_LbModuleStatus : GTLRObject

/** [Output Only] The URL of the corresponding ForwardingRule in GCE. */
@property(copy, nullable) NSString *forwardingRuleUrl;

/** [Output Only] The URL of the corresponding TargetPool resource in GCE. */
@property(copy, nullable) NSString *targetPoolUrl;

@end


/**
 *  A Compute Engine metadata entry. Identical to the metadata on the
 *  corresponding Compute Engine resource.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRManager_Metadata : GTLRCollectionObject

/** The fingerprint of the metadata. */
@property(copy, nullable) NSString *fingerPrint;

/**
 *  A list of metadata items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRManager_MetadataItem *> *items;

@end


/**
 *  A Compute Engine metadata item, defined as a key:value pair. Identical to
 *  the metadata on the corresponding Compute Engine resource.
 */
@interface GTLRManager_MetadataItem : GTLRObject

/** A metadata key. */
@property(copy, nullable) NSString *key;

/** A metadata value. */
@property(copy, nullable) NSString *value;

@end


/**
 *  A module in a configuration. A module represents a single homogeneous,
 *  possibly replicated task.
 */
@interface GTLRManager_Module : GTLRObject

@property(strong, nullable) GTLRManager_AutoscalingModule *autoscalingModule;
@property(strong, nullable) GTLRManager_FirewallModule *firewallModule;
@property(strong, nullable) GTLRManager_HealthCheckModule *healthCheckModule;
@property(strong, nullable) GTLRManager_LbModule *lbModule;
@property(strong, nullable) GTLRManager_NetworkModule *networkModule;
@property(strong, nullable) GTLRManager_ReplicaPoolModule *replicaPoolModule;

/**
 *  The type of this module. Valid values ("AUTOSCALING", "FIREWALL",
 *  "HEALTH_CHECK", "LOAD_BALANCING", "NETWORK", "REPLICA_POOL")
 */
@property(copy, nullable) NSString *type;

@end


/**
 *  [Output Only] Aggregate status for a module.
 */
@interface GTLRManager_ModuleStatus : GTLRObject

/**
 *  [Output Only] The status of the AutoscalingModule, set for type AUTOSCALING.
 */
@property(strong, nullable) GTLRManager_AutoscalingModuleStatus *autoscalingModuleStatus;

/** [Output Only] The status of the FirewallModule, set for type FIREWALL. */
@property(strong, nullable) GTLRManager_FirewallModuleStatus *firewallModuleStatus;

/**
 *  [Output Only] The status of the HealthCheckModule, set for type
 *  HEALTH_CHECK.
 */
@property(strong, nullable) GTLRManager_HealthCheckModuleStatus *healthCheckModuleStatus;

/** [Output Only] The status of the LbModule, set for type LOAD_BALANCING. */
@property(strong, nullable) GTLRManager_LbModuleStatus *lbModuleStatus;

/** [Output Only] The status of the NetworkModule, set for type NETWORK. */
@property(strong, nullable) GTLRManager_NetworkModuleStatus *networkModuleStatus;

/** [Output Only] The status of the ReplicaPoolModule, set for type VM. */
@property(strong, nullable) GTLRManager_ReplicaPoolModuleStatus *replicaPoolModuleStatus;

/** [Output Only] The current state of the module. */
@property(strong, nullable) GTLRManager_DeployState *state;

/** [Output Only] The type of the module. */
@property(copy, nullable) NSString *type;

@end


/**
 *  A Compute Engine NetworkInterface resource. Identical to the
 *  NetworkInterface on the corresponding Compute Engine resource.
 */
@interface GTLRManager_NetworkInterface : GTLRObject

/**
 *  An array of configurations for this interface. This specifies how this
 *  interface is configured to interact with other network services
 */
@property(strong, nullable) NSArray<GTLRManager_AccessConfig *> *accessConfigs;

/** Name of the interface. */
@property(copy, nullable) NSString *name;

/**
 *  The name of the NetworkModule to which this interface applies. If not
 *  specified, or specified as 'default', this will use the 'default' network.
 */
@property(copy, nullable) NSString *network;

/**
 *  An optional IPV4 internal network address to assign to the instance for this
 *  network interface.
 */
@property(copy, nullable) NSString *networkIp;

@end


/**
 *  GTLRManager_NetworkModule
 */
@interface GTLRManager_NetworkModule : GTLRObject

/**
 *  The description of the network.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  An optional address that is used for default routing to other networks. This
 *  must be within the range specified by IPv4Range, and is typicall the first
 *  usable address in that range. If not specified, the default value is the
 *  first usable address in IPv4Range.
 */
@property(copy, nullable) NSString *gatewayIPv4;

/**
 *  Required; The range of internal addresses that are legal on this network.
 *  This range is a CIDR specification, for example: 192.168.0.0/16.
 */
@property(copy, nullable) NSString *IPv4Range;

@end


/**
 *  GTLRManager_NetworkModuleStatus
 */
@interface GTLRManager_NetworkModuleStatus : GTLRObject

/** [Output Only] The URL of the corresponding Network resource. */
@property(copy, nullable) NSString *networkUrl;

@end


/**
 *  A Persistent Disk resource that will be created and attached to each Replica
 *  in the Pool. Each Replica will have a unique persistent disk that is created
 *  and attached to that Replica.
 */
@interface GTLRManager_NewDisk : GTLRObject

/** How the disk will be attached to the Replica. */
@property(strong, nullable) GTLRManager_DiskAttachment *attachment;

/**
 *  If true, then this disk will be deleted when the instance is deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *autoDelete;

/**
 *  If true, indicates that this is the root persistent disk.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *boot;

/**
 *  Create the new disk using these parameters. The name of the disk will be
 *  <instance_name>-<five_random_charactersgt;.
 */
@property(strong, nullable) GTLRManager_NewDiskInitializeParams *initializeParams;

@end


/**
 *  Initialization parameters for creating a new disk.
 */
@interface GTLRManager_NewDiskInitializeParams : GTLRObject

/**
 *  The size of the created disk in gigabytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(strong, nullable) NSNumber *diskSizeGb;

/**
 *  Name of the disk type resource describing which disk type to use to create
 *  the disk. For example 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'
 */
@property(copy, nullable) NSString *diskType;

/** The fully-qualified URL of a source image to use to create this disk. */
@property(copy, nullable) NSString *sourceImage;

@end


/**
 *  A specification for overriding parameters in a Template that corresponds to
 *  the Deployment.
 */
@interface GTLRManager_ParamOverride : GTLRObject

/**
 *  A JSON Path expression that specifies which parameter should be overridden.
 */
@property(copy, nullable) NSString *path;

/** The new value to assign to the overridden parameter. */
@property(copy, nullable) NSString *value;

@end


/**
 *  GTLRManager_ReplicaPoolModule
 */
@interface GTLRManager_ReplicaPoolModule : GTLRObject

/** A list of environment variables. */
@property(strong, nullable) GTLRManager_ReplicaPoolModuleEnvVariables *envVariables;

/** The Health Checks to configure for the ReplicaPoolModule */
@property(strong, nullable) NSArray<NSString *> *healthChecks;

/**
 *  Number of replicas in this module.
 *
 *  Uses NSNumber of intValue.
 */
@property(strong, nullable) NSNumber *numReplicas;

/** Information for a ReplicaPoolModule. */
@property(strong, nullable) GTLRManager_ReplicaPoolParams *replicaPoolParams;

/**
 *  [Output Only] The name of the Resource View associated with a
 *  ReplicaPoolModule. This field will be generated by the service.
 */
@property(copy, nullable) NSString *resourceView;

@end


/**
 *  A list of environment variables.
 *
 *  @note This class is documented as having more properties of
 *        GTLRManager_EnvVariable. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRManager_ReplicaPoolModuleEnvVariables : GTLRObject
@end


/**
 *  GTLRManager_ReplicaPoolModuleStatus
 */
@interface GTLRManager_ReplicaPoolModuleStatus : GTLRObject

/** [Output Only] The URL of the associated ReplicaPool resource. */
@property(copy, nullable) NSString *replicaPoolUrl;

/**
 *  [Output Only] The URL of the Resource Group associated with this
 *  ReplicaPool.
 */
@property(copy, nullable) NSString *resourceViewUrl;

@end


/**
 *  Configuration information for a ReplicaPools resource. Specifying an item
 *  within will determine the ReplicaPools API version used for a
 *  ReplicaPoolModule. Only one may be specified.
 */
@interface GTLRManager_ReplicaPoolParams : GTLRObject

/** ReplicaPoolParams specifications for use with ReplicaPools v1beta1. */
@property(strong, nullable) GTLRManager_ReplicaPoolParamsV1Beta1 *v1beta1;

@end


/**
 *  Configuration information for a ReplicaPools v1beta1 API resource. Directly
 *  maps to ReplicaPool InitTemplate.
 */
@interface GTLRManager_ReplicaPoolParamsV1Beta1 : GTLRObject

/**
 *  Whether these replicas should be restarted if they experience a failure. The
 *  default value is true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *autoRestart;

/** The base name for instances within this ReplicaPool. */
@property(copy, nullable) NSString *baseInstanceName;

/**
 *  Enables IP Forwarding
 *
 *  Uses NSNumber of boolValue.
 */
@property(strong, nullable) NSNumber *canIpForward;

/**
 *  An optional textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/**
 *  A list of existing Persistent Disk resources to attach to each replica in
 *  the pool. Each disk will be attached in read-only mode to every replica.
 */
@property(strong, nullable) NSArray<GTLRManager_ExistingDisk *> *disksToAttach;

/**
 *  A list of Disk resources to create and attach to each Replica in the Pool.
 *  Currently, you can only define one disk and it must be a root persistent
 *  disk. Note that Replica Pool will create a root persistent disk for each
 *  replica.
 */
@property(strong, nullable) NSArray<GTLRManager_NewDisk *> *disksToCreate;

/**
 *  Name of the Action to be run during initialization of a ReplicaPoolModule.
 */
@property(copy, nullable, getter=valueOf_initAction) NSString *initAction;

/**
 *  The machine type for this instance. Either a complete URL, or the resource
 *  name (e.g. n1-standard-1).
 */
@property(copy, nullable) NSString *machineType;

/** The metadata key/value pairs assigned to this instance. */
@property(strong, nullable) GTLRManager_Metadata *metadata;

/**
 *  A list of network interfaces for the instance. Currently only one interface
 *  is supported by Google Compute Engine.
 */
@property(strong, nullable) NSArray<GTLRManager_NetworkInterface *> *networkInterfaces;

@property(copy, nullable) NSString *onHostMaintenance;

/** A list of Service Accounts to enable for this instance. */
@property(strong, nullable) NSArray<GTLRManager_ServiceAccount *> *serviceAccounts;

/**
 *  A list of tags to apply to the Google Compute Engine instance to identify
 *  resources.
 */
@property(strong, nullable) GTLRManager_Tag *tags;

/**
 *  The zone for this ReplicaPool.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(copy, nullable) NSString *zoneProperty;

@end


/**
 *  A Compute Engine service account, identical to the Compute Engine resource.
 */
@interface GTLRManager_ServiceAccount : GTLRObject

/** Service account email address. */
@property(copy, nullable) NSString *email;

/** List of OAuth2 scopes to obtain for the service account. */
@property(strong, nullable) NSArray<NSString *> *scopes;

@end


/**
 *  A Compute Engine Instance tag, identical to the tags on the corresponding
 *  Compute Engine Instance resource.
 */
@interface GTLRManager_Tag : GTLRObject

/** The fingerprint of the tag. */
@property(copy, nullable) NSString *fingerPrint;

/** Items contained in this tag. */
@property(strong, nullable) NSArray<NSString *> *items;

@end


/**
 *  A Template represents a complete configuration for a Deployment.
 */
@interface GTLRManager_Template : GTLRObject

/** Action definitions for use in Module intents in this Template. */
@property(strong, nullable) GTLRManager_TemplateActions *actions;

/**
 *  A user-supplied description of this Template.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(copy, nullable) NSString *descriptionProperty;

/** A list of modules for this Template. */
@property(strong, nullable) GTLRManager_TemplateModules *modules;

/**
 *  Name of this Template. The name must conform to the expression:
 *  [a-zA-Z0-9-_]{1,64}
 */
@property(copy, nullable) NSString *name;

@end


/**
 *  Action definitions for use in Module intents in this Template.
 *
 *  @note This class is documented as having more properties of
 *        GTLRManager_Action. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRManager_TemplateActions : GTLRObject
@end


/**
 *  A list of modules for this Template.
 *
 *  @note This class is documented as having more properties of
 *        GTLRManager_Module. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRManager_TemplateModules : GTLRObject
@end


/**
 *  GTLRManager_TemplatesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRManager_TemplatesListResponse : GTLRCollectionObject

@property(copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(strong, nullable) NSArray<GTLRManager_Template *> *resources;

@end

NS_ASSUME_NONNULL_END
