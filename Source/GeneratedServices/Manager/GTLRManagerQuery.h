// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Deployment Manager API (manager/v1beta2)
// Description:
//   The Deployment Manager API allows users to declaratively configure, deploy
//   and run complex solutions on the Google Cloud Platform.
// Documentation:
//   https://developers.google.com/deployment-manager/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRManager_Deployment;
@class GTLRManager_Template;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Manager query classes.
 */
@interface GTLRManagerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(copy, nullable) NSString *fields;

@end

/**
 *  GTLRManagerQuery_DeploymentsDelete
 *
 *  Method: manager.deployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerNdevCloudman
 */
@interface GTLRManagerQuery_DeploymentsDelete : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForDeploymentsDeleteWithprojectId:region:deploymentName:]

@property(copy, nullable) NSString *deploymentName;

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *region;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  @param projectId NSString
 *  @param region NSString
 *  @param deploymentName NSString
 *
 *  @returns GTLRManagerQuery_DeploymentsDelete
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                            region:(NSString *)region
                    deploymentName:(NSString *)deploymentName;

@end

/**
 *  GTLRManagerQuery_DeploymentsGet
 *
 *  Method: manager.deployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerCloudPlatformReadOnly
 *    @c kGTLRAuthScopeManagerNdevCloudman
 *    @c kGTLRAuthScopeManagerNdevCloudmanReadonly
 */
@interface GTLRManagerQuery_DeploymentsGet : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForDeploymentsGetWithprojectId:region:deploymentName:]

@property(copy, nullable) NSString *deploymentName;

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *region;

/**
 *  Fetches a @c GTLRManager_Deployment.
 *
 *  @param projectId NSString
 *  @param region NSString
 *  @param deploymentName NSString
 *
 *  @returns GTLRManagerQuery_DeploymentsGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                            region:(NSString *)region
                    deploymentName:(NSString *)deploymentName;

@end

/**
 *  GTLRManagerQuery_DeploymentsInsert
 *
 *  Method: manager.deployments.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerAppengineAdmin
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerCompute
 *    @c kGTLRAuthScopeManagerDevstorageReadWrite
 *    @c kGTLRAuthScopeManagerNdevCloudman
 */
@interface GTLRManagerQuery_DeploymentsInsert : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForDeploymentsInsertWithObject:projectId:region:]

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *region;

/**
 *  Fetches a @c GTLRManager_Deployment.
 *
 *  @param object The @c GTLRManager_Deployment to include in the query.
 *  @param projectId NSString
 *  @param region NSString
 *
 *  @returns GTLRManagerQuery_DeploymentsInsert
 */
+ (instancetype)queryWithObject:(GTLRManager_Deployment *)object
                      projectId:(NSString *)projectId
                         region:(NSString *)region;

@end

/**
 *  GTLRManagerQuery_DeploymentsList
 *
 *  Method: manager.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerCloudPlatformReadOnly
 *    @c kGTLRAuthScopeManagerNdevCloudman
 *    @c kGTLRAuthScopeManagerNdevCloudmanReadonly
 */
@interface GTLRManagerQuery_DeploymentsList : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForDeploymentsListWithprojectId:region:]

/**
 *  Maximum count of results to be returned. Acceptable values are 0 to 100,
 *  inclusive. (Default: 50)
 *
 *  @note If not set, the documented server-side default will be 50 (from the
 *        range 0..100).
 */
@property(assign) NSInteger maxResults;

/**
 *  Specifies a nextPageToken returned by a previous list request. This token
 *  can be used to request the next page of results from a previous list
 *  request.
 */
@property(copy, nullable) NSString *pageToken;

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *region;

/**
 *  Fetches a @c GTLRManager_DeploymentsListResponse.
 *
 *  @param projectId NSString
 *  @param region NSString
 *
 *  @returns GTLRManagerQuery_DeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                            region:(NSString *)region;

@end

/**
 *  GTLRManagerQuery_TemplatesDelete
 *
 *  Method: manager.templates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerNdevCloudman
 */
@interface GTLRManagerQuery_TemplatesDelete : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForTemplatesDeleteWithprojectId:templateName:]

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *templateName;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  @param projectId NSString
 *  @param templateName NSString
 *
 *  @returns GTLRManagerQuery_TemplatesDelete
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                      templateName:(NSString *)templateName;

@end

/**
 *  GTLRManagerQuery_TemplatesGet
 *
 *  Method: manager.templates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerCloudPlatformReadOnly
 *    @c kGTLRAuthScopeManagerNdevCloudman
 *    @c kGTLRAuthScopeManagerNdevCloudmanReadonly
 */
@interface GTLRManagerQuery_TemplatesGet : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForTemplatesGetWithprojectId:templateName:]

@property(copy, nullable) NSString *projectId;

@property(copy, nullable) NSString *templateName;

/**
 *  Fetches a @c GTLRManager_Template.
 *
 *  @param projectId NSString
 *  @param templateName NSString
 *
 *  @returns GTLRManagerQuery_TemplatesGet
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId
                      templateName:(NSString *)templateName;

@end

/**
 *  GTLRManagerQuery_TemplatesInsert
 *
 *  Method: manager.templates.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerNdevCloudman
 */
@interface GTLRManagerQuery_TemplatesInsert : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForTemplatesInsertWithObject:projectId:]

@property(copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRManager_Template.
 *
 *  @param object The @c GTLRManager_Template to include in the query.
 *  @param projectId NSString
 *
 *  @returns GTLRManagerQuery_TemplatesInsert
 */
+ (instancetype)queryWithObject:(GTLRManager_Template *)object
                      projectId:(NSString *)projectId;

@end

/**
 *  GTLRManagerQuery_TemplatesList
 *
 *  Method: manager.templates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeManagerCloudPlatform
 *    @c kGTLRAuthScopeManagerCloudPlatformReadOnly
 *    @c kGTLRAuthScopeManagerNdevCloudman
 *    @c kGTLRAuthScopeManagerNdevCloudmanReadonly
 */
@interface GTLRManagerQuery_TemplatesList : GTLRManagerQuery
// Previous library name was
//   +[GTLQueryManager queryForTemplatesListWithprojectId:]

/**
 *  Maximum count of results to be returned. Acceptable values are 0 to 100,
 *  inclusive. (Default: 50)
 *
 *  @note If not set, the documented server-side default will be 50 (from the
 *        range 0..100).
 */
@property(assign) NSInteger maxResults;

/**
 *  Specifies a nextPageToken returned by a previous list request. This token
 *  can be used to request the next page of results from a previous list
 *  request.
 */
@property(copy, nullable) NSString *pageToken;

@property(copy, nullable) NSString *projectId;

/**
 *  Fetches a @c GTLRManager_TemplatesListResponse.
 *
 *  @param projectId NSString
 *
 *  @returns GTLRManagerQuery_TemplatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithProjectId:(NSString *)projectId;

@end

NS_ASSUME_NONNULL_END
